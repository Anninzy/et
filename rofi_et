#!/bin/sh

# TODO: Remember to make stuff like wordlist configurable
# TODO: Remove the message box underline when only a message
# TODO: is shown with no choices

exit_on_esc () {
  EXIT_CODE=$?
  if [ $EXIT_CODE -ne 0 ]; then
    exit $EXIT_CODE
  fi
}

run_again () {
  if [ "$2" ]; then
    WORD=$(echo "$2" | rofi -dmenu -p $COMMAND -i -mesg "$1")
    exit_on_esc

    WORD_LENGTH=$(($(echo -n "$WORD" | wc -m) - 1))
    if [ $WORD_LENGTH -gt 0 ]; then
      NEW_WORD=$(echo -n "$WORD" | cut -c 1-$WORD_LENGTH)
      echo "$2" | grep -w "$NEW_WORD" > /dev/null
      IN_SUGGESTIONS=$?
      if [ $IN_SUGGESTIONS -eq 0 ]; then
        echo -n "$NEW_WORD" | xclip -r -selection clipboard

        which notify-send > /dev/null
        HAS_NOTIFY_SEND=$?
        if [ $HAS_NOTIFY_SEND -eq 0 ]; then
          notify-send -a 'rofi_et' "\"$NEW_WORD\" has been copied to clipboard"
        fi

        exit 0
      fi
    fi
  else
    if [ "$1" ]; then
      WORD=$(rofi -dmenu -p $COMMAND -i -mesg "$1" -lines 0)
      exit_on_esc
    else
      WORD=$(rofi -dmenu -p query -i)
      exit_on_esc
    fi
  fi

  $0 "$WORD"
}

spell () {
  agrep -iB "$1" wordlist.txt | grep -iw "$1" > /dev/null
  FOUND=$?
  if [ $FOUND -eq 0 ]; then
    run_again "\"$1\" appears to be spelled correctly"
  else
    MESG=$(
cat << EOF
"$1" doesn't appear to be spelled correctly.
Suggestions:
EOF
    )

    SUGGESTIONS=$(agrep -iB "$1" wordlist.txt | awk '{print length, $0}' | sort -n | cut -d " " -f2-)

    run_again "$MESG" "$SUGGESTIONS"
  fi
}

define () {
  run_again "Defining the word $1"
}

COMMAND=""

if [ "$@" ]; then
  COMMAND=$(echo "$@" | cut -d " " -f 1)
  WORD=$(echo "$@" | cut -d " " -f 2)

  SPACE_COUNT=$(echo "$@" | tr -cd ' \t' | wc -c)
  if [ "$WORD" == "" ] || [ $SPACE_COUNT -lt 1 ]; then
    run_again "You need to specifiy a command and a word"
  else
    if [ "$COMMAND" == "spell" ]; then
      spell $WORD
    elif [ "$COMMAND" == "define" ]; then
      define $WORD
    else
      run_again
    fi
  fi
else
  run_again
fi
